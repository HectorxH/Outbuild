services:
  postgres:
    image: postgres:17
    hostname: localhost
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_DB: outbuild
    command:
      - postgres
      - -clog_statement=all
      - -clogging_collector=on
      - -clog_directory=/var/log/postgresql
      - -clog_destination=jsonlog
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - pg-log:/var/log
    networks:
      - backend

  api:
    build:
      context: .
    environment:
      PG_HOST: postgres
      PG_DB: outbuild
    ports:
      - "8000:8000"
    volumes:
      - api-log:/var/log
    networks:
      - backend
    develop:
      watch:
        - action: rebuild
          path: ./src
        - action: rebuild
          path: ./package-lock.json

  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    volumes:
      - ./o11y/loki-config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml
    networks:
      - backend

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - pg-log:/var/log/postgresql
      - api-log:/var/log/api
      - ./o11y/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - backend
    depends_on:
      - postgres
      - api

  grafana:
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    image: grafana/grafana:latest
    volumes:
      - ./o11y/grafana-main.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./o11y/grafana-dashboard.json:/var/lib/grafana/dashboards/outbuild.json
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    ports:
      - "3000:3000"
    networks:
      - backend

volumes:
  postgres-data:
  pg-log:
  api-log:

networks:
  backend:
